!function(e){var t={};function n(o){if(t[o])return t[o].exports;var r=t[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(o,r,function(t){return e[t]}.bind(null,r));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=21)}([function(e,t,n){"use strict";n.r(t),n.d(t,"render",(function(){return M})),n.d(t,"hydrate",(function(){return P})),n.d(t,"createElement",(function(){return h})),n.d(t,"h",(function(){return h})),n.d(t,"Fragment",(function(){return y})),n.d(t,"createRef",(function(){return v})),n.d(t,"isValidElement",(function(){return r})),n.d(t,"Component",(function(){return b})),n.d(t,"cloneElement",(function(){return z})),n.d(t,"createContext",(function(){return T})),n.d(t,"toChildArray",(function(){return E})),n.d(t,"_unmount",(function(){return j})),n.d(t,"options",(function(){return o}));var o,r,i,c,u,l,a,s={},f=[],_=/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord/i;function p(e,t){for(var n in t)e[n]=t[n];return e}function d(e){var t=e.parentNode;t&&t.removeChild(e)}function h(e,t,n){var o,r=arguments,i={};for(o in t)"key"!==o&&"ref"!==o&&(i[o]=t[o]);if(arguments.length>3)for(n=[n],o=3;o<arguments.length;o++)n.push(r[o]);if(null!=n&&(i.children=n),"function"==typeof e&&null!=e.defaultProps)for(o in e.defaultProps)void 0===i[o]&&(i[o]=e.defaultProps[o]);return m(e,i,t&&t.key,t&&t.ref)}function m(e,t,n,r){var i={type:e,props:t,key:n,ref:r,__k:null,__:null,__b:0,__e:null,__d:null,__c:null,constructor:void 0};return o.vnode&&o.vnode(i),i}function v(){return{}}function y(e){return e.children}function b(e,t){this.props=e,this.context=t}function g(e,t){if(null==t)return e.__?g(e.__,e.__.__k.indexOf(e)+1):null;for(var n;t<e.__k.length;t++)if(null!=(n=e.__k[t])&&null!=n.__e)return n.__e;return"function"==typeof e.type?g(e):null}function F(e){var t,n;if(null!=(e=e.__)&&null!=e.__c){for(e.__e=e.__c.base=null,t=0;t<e.__k.length;t++)if(null!=(n=e.__k[t])&&null!=n.__e){e.__e=e.__c.base=n.__e;break}return F(e)}}function k(e){(!e.__d&&(e.__d=!0)&&1===i.push(e)||u!==o.debounceRendering)&&((u=o.debounceRendering)||c)(C)}function C(){var e,t,n,o,r,c,u;for(i.sort((function(e,t){return t.__v.__b-e.__v.__b}));e=i.pop();)e.__d&&(n=void 0,o=void 0,c=(r=(t=e).__v).__e,(u=t.__P)&&(n=[],o=A(u,r,p({},r),t.__n,void 0!==u.ownerSVGElement,null,n,null==c?g(r):c),H(n,r),o!=c&&F(r)))}function x(e,t,n,o,r,i,c,u,l){var a,_,p,h,m,v,y,b=n&&n.__k||f,F=b.length;if(u==s&&(u=null!=i?i[0]:F?g(n,0):null),a=0,t.__k=E(t.__k,(function(n){if(null!=n){if(n.__=t,n.__b=t.__b+1,null===(p=b[a])||p&&n.key==p.key&&n.type===p.type)b[a]=void 0;else for(_=0;_<F;_++){if((p=b[_])&&n.key==p.key&&n.type===p.type){b[_]=void 0;break}p=null}if(h=A(e,n,p=p||s,o,r,i,c,u,l),(_=n.ref)&&p.ref!=_&&(y||(y=[]),p.ref&&y.push(p.ref,null,n),y.push(_,n.__c||h,n)),null!=h){if(null==v&&(v=h),null!=n.__d)h=n.__d,n.__d=null;else if(i==p||h!=u||null==h.parentNode){e:if(null==u||u.parentNode!==e)e.appendChild(h);else{for(m=u,_=0;(m=m.nextSibling)&&_<F;_+=2)if(m==h)break e;e.insertBefore(h,u)}"option"==t.type&&(e.value="")}u=h.nextSibling,"function"==typeof t.type&&(t.__d=h)}}return a++,n})),t.__e=v,null!=i&&"function"!=typeof t.type)for(a=i.length;a--;)null!=i[a]&&d(i[a]);for(a=F;a--;)null!=b[a]&&j(b[a],b[a]);if(y)for(a=0;a<y.length;a++)S(y[a],y[++a],y[++a])}function E(e,t,n){if(null==n&&(n=[]),null==e||"boolean"==typeof e)t&&n.push(t(null));else if(Array.isArray(e))for(var o=0;o<e.length;o++)E(e[o],t,n);else n.push(t?t("string"==typeof e||"number"==typeof e?m(null,e,null,null):null!=e.__e||null!=e.__c?m(e.type,e.props,e.key,null):e):e);return n}function N(e,t,n){"-"===t[0]?e.setProperty(t,n):e[t]="number"==typeof n&&!1===_.test(t)?n+"px":null==n?"":n}function D(e,t,n,o,r){var i,c,u,l,a;if(r?"className"===t&&(t="class"):"class"===t&&(t="className"),"key"===t||"children"===t);else if("style"===t)if(i=e.style,"string"==typeof n)i.cssText=n;else{if("string"==typeof o&&(i.cssText="",o=null),o)for(c in o)n&&c in n||N(i,c,"");if(n)for(u in n)o&&n[u]===o[u]||N(i,u,n[u])}else"o"===t[0]&&"n"===t[1]?(l=t!==(t=t.replace(/Capture$/,"")),a=t.toLowerCase(),t=(a in e?a:t).slice(2),n?(o||e.addEventListener(t,w,l),(e.l||(e.l={}))[t]=n):e.removeEventListener(t,w,l)):"list"!==t&&"tagName"!==t&&"form"!==t&&"type"!==t&&!r&&t in e?e[t]=null==n?"":n:"function"!=typeof n&&"dangerouslySetInnerHTML"!==t&&(t!==(t=t.replace(/^xlink:?/,""))?null==n||!1===n?e.removeAttributeNS("http://www.w3.org/1999/xlink",t.toLowerCase()):e.setAttributeNS("http://www.w3.org/1999/xlink",t.toLowerCase(),n):null==n||!1===n?e.removeAttribute(t):e.setAttribute(t,n))}function w(e){this.l[e.type](o.event?o.event(e):e)}function A(e,t,n,r,i,c,u,l,a){var s,f,_,d,h,m,v,g,F,k,C=t.type;if(void 0!==t.constructor)return null;(s=o.__b)&&s(t);try{e:if("function"==typeof C){if(g=t.props,F=(s=C.contextType)&&r[s.__c],k=s?F?F.props.value:s.__:r,n.__c?v=(f=t.__c=n.__c).__=f.__E:("prototype"in C&&C.prototype.render?t.__c=f=new C(g,k):(t.__c=f=new b(g,k),f.constructor=C,f.render=B),F&&F.sub(f),f.props=g,f.state||(f.state={}),f.context=k,f.__n=r,_=f.__d=!0,f.__h=[]),null==f.__s&&(f.__s=f.state),null!=C.getDerivedStateFromProps&&(f.__s==f.state&&(f.__s=p({},f.__s)),p(f.__s,C.getDerivedStateFromProps(g,f.__s))),d=f.props,h=f.state,_)null==C.getDerivedStateFromProps&&null!=f.componentWillMount&&f.componentWillMount(),null!=f.componentDidMount&&f.__h.push(f.componentDidMount);else{if(null==C.getDerivedStateFromProps&&g!==d&&null!=f.componentWillReceiveProps&&f.componentWillReceiveProps(g,k),!f.__e&&null!=f.shouldComponentUpdate&&!1===f.shouldComponentUpdate(g,f.__s,k)){for(f.props=g,f.state=f.__s,f.__d=!1,f.__v=t,t.__e=n.__e,t.__k=n.__k,f.__h.length&&u.push(f),s=0;s<t.__k.length;s++)t.__k[s]&&(t.__k[s].__=t);break e}null!=f.componentWillUpdate&&f.componentWillUpdate(g,f.__s,k),null!=f.componentDidUpdate&&f.__h.push((function(){f.componentDidUpdate(d,h,m)}))}f.context=k,f.props=g,f.state=f.__s,(s=o.__r)&&s(t),f.__d=!1,f.__v=t,f.__P=e,s=f.render(f.props,f.state,f.context),t.__k=E(null!=s&&s.type==y&&null==s.key?s.props.children:s),null!=f.getChildContext&&(r=p(p({},r),f.getChildContext())),_||null==f.getSnapshotBeforeUpdate||(m=f.getSnapshotBeforeUpdate(d,h)),x(e,t,n,r,i,c,u,l,a),f.base=t.__e,f.__h.length&&u.push(f),v&&(f.__E=f.__=null),f.__e=null}else t.__e=O(n.__e,t,n,r,i,c,u,a);(s=o.diffed)&&s(t)}catch(e){o.__e(e,t,n)}return t.__e}function H(e,t){o.__c&&o.__c(t,e),e.some((function(t){try{e=t.__h,t.__h=[],e.some((function(e){e.call(t)}))}catch(e){o.__e(e,t.__v)}}))}function O(e,t,n,o,r,i,c,u){var l,a,_,p,d,h=n.props,m=t.props;if(r="svg"===t.type||r,null==e&&null!=i)for(l=0;l<i.length;l++)if(null!=(a=i[l])&&(null===t.type?3===a.nodeType:a.localName===t.type)){e=a,i[l]=null;break}if(null==e){if(null===t.type)return document.createTextNode(m);e=r?document.createElementNS("http://www.w3.org/2000/svg",t.type):document.createElement(t.type),i=null}if(null===t.type)null!=i&&(i[i.indexOf(e)]=null),h!==m&&e.data!=m&&(e.data=m);else if(t!==n){if(null!=i&&(i=f.slice.call(e.childNodes)),_=(h=n.props||s).dangerouslySetInnerHTML,p=m.dangerouslySetInnerHTML,!u){if(h===s)for(h={},d=0;d<e.attributes.length;d++)h[e.attributes[d].name]=e.attributes[d].value;(p||_)&&(p&&_&&p.__html==_.__html||(e.innerHTML=p&&p.__html||""))}(function(e,t,n,o,r){var i;for(i in n)i in t||D(e,i,null,n[i],o);for(i in t)r&&"function"!=typeof t[i]||"value"===i||"checked"===i||n[i]===t[i]||D(e,i,t[i],n[i],o)})(e,m,h,r,u),t.__k=t.props.children,p||x(e,t,n,o,"foreignObject"!==t.type&&r,i,c,s,u),u||("value"in m&&void 0!==m.value&&m.value!==e.value&&(e.value=null==m.value?"":m.value),"checked"in m&&void 0!==m.checked&&m.checked!==e.checked&&(e.checked=m.checked))}return e}function S(e,t,n){try{"function"==typeof e?e(t):e.current=t}catch(e){o.__e(e,n)}}function j(e,t,n){var r,i,c;if(o.unmount&&o.unmount(e),(r=e.ref)&&(r.current&&r.current!==e.__e||S(r,null,t)),n||"function"==typeof e.type||(n=null!=(i=e.__e)),e.__e=e.__d=null,null!=(r=e.__c)){if(r.componentWillUnmount)try{r.componentWillUnmount()}catch(e){o.__e(e,t)}r.base=r.__P=null}if(r=e.__k)for(c=0;c<r.length;c++)r[c]&&j(r[c],t,n);null!=i&&d(i)}function B(e,t,n){return this.constructor(e,n)}function M(e,t,n){var r,i,c;o.__&&o.__(e,t),i=(r=n===l)?null:n&&n.__k||t.__k,e=h(y,null,[e]),c=[],A(t,(r?t:n||t).__k=e,i||s,s,void 0!==t.ownerSVGElement,n&&!r?[n]:i?null:f.slice.call(t.childNodes),c,n||s,r),H(c,e)}function P(e,t){M(e,t,l)}function z(e,t){return t=p(p({},e.props),t),arguments.length>2&&(t.children=f.slice.call(arguments,2)),m(e.type,t,t.key||e.key,t.ref||e.ref)}function T(e){var t={},n={__c:"__cC"+a++,__:e,Consumer:function(e,t){return e.children(t)},Provider:function(e){var o,r=this;return this.getChildContext||(o=[],this.getChildContext=function(){return t[n.__c]=r,t},this.shouldComponentUpdate=function(t){e.value!==t.value&&o.some((function(e){e.context=t.value,k(e)}))},this.sub=function(e){o.push(e);var t=e.componentWillUnmount;e.componentWillUnmount=function(){o.splice(o.indexOf(e),1),t&&t.call(e)}}),e.children}};return n.Consumer.contextType=n,n}o={__e:function(e,t){for(var n,o;t=t.__;)if((n=t.__c)&&!n.__)try{if(n.constructor&&null!=n.constructor.getDerivedStateFromError&&(o=!0,n.setState(n.constructor.getDerivedStateFromError(e))),null!=n.componentDidCatch&&(o=!0,n.componentDidCatch(e)),o)return k(n.__E=n)}catch(t){e=t}throw e}},r=function(e){return null!=e&&void 0===e.constructor},b.prototype.setState=function(e,t){var n;n=this.__s!==this.state?this.__s:this.__s=p({},this.state),"function"==typeof e&&(e=e(n,this.props)),e&&p(n,e),null!=e&&this.__v&&(this.__e=!1,t&&this.__h.push(t),k(this))},b.prototype.forceUpdate=function(e){this.__v&&(this.__e=!0,e&&this.__h.push(e),k(this))},b.prototype.render=y,i=[],c="function"==typeof Promise?Promise.prototype.then.bind(Promise.resolve()):setTimeout,l=s,a=0},function(e,t,n){"use strict";n.d(t,"c",(function(){return p})),n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return h}));var o,r,i,c=n(0),u=[],l=c.options.__r,a=c.options.diffed,s=c.options.__c,f=c.options.unmount;function _(e){c.options.__h&&c.options.__h(r);var t=r.__H||(r.__H={t:[],u:[]});return e>=t.t.length&&t.t.push({}),t.t[e]}function p(e){return function(e,t,n){var i=_(o++);return i.__c||(i.__c=r,i.i=[n?n(t):F(void 0,t),function(t){var n=e(i.i[0],t);i.i[0]!==n&&(i.i[0]=n,i.__c.setState({}))}]),i.i}(F,e)}function d(e,t){var n=_(o++);g(n.o,t)&&(n.i=e,n.o=t,r.__H.u.push(n))}function h(e){return m((function(){return{current:e}}),[])}function m(e,t){var n=_(o++);return g(n.o,t)?(n.o=t,n.v=e,n.i=e()):n.i}function v(){u.some((function(e){e.__P&&(e.__H.u.forEach(y),e.__H.u.forEach(b),e.__H.u=[])})),u=[]}function y(e){e.m&&e.m()}function b(e){var t=e.i();"function"==typeof t&&(e.m=t)}function g(e,t){return!e||t.some((function(t,n){return t!==e[n]}))}function F(e,t){return"function"==typeof t?t(e):t}c.options.__r=function(e){l&&l(e),o=0,(r=e.__c).__H&&(r.__H.u.forEach(y),r.__H.u.forEach(b),r.__H.u=[])},c.options.diffed=function(e){a&&a(e);var t=e.__c;if(t){var n=t.__H;n&&n.u.length&&(1!==u.push(t)&&i===c.options.requestAnimationFrame||((i=c.options.requestAnimationFrame)||function(e){var t,n=function(){clearTimeout(o),cancelAnimationFrame(t),setTimeout(e)},o=setTimeout(n,100);"undefined"!=typeof window&&(t=requestAnimationFrame(n))})(v))}},c.options.__c=function(e,t){t.some((function(e){e.__h.forEach(y),e.__h=e.__h.filter((function(e){return!e.i||b(e)}))})),s&&s(e,t)},c.options.unmount=function(e){f&&f(e);var t=e.__c;if(t){var n=t.__H;n&&n.t.forEach((function(e){return e.m&&e.m()}))}}},,function(e,t,n){var o;e.exports=(o=n(0),function(e){function t(o){if(n[o])return n[o].exports;var r=n[o]={exports:{},id:o,loaded:!1};return e[o].call(r.exports,r,r.exports,t),r.loaded=!0,r.exports}var n={};return t.m=e,t.c=n,t.p="",t(0)}([function(e,t,n){"use strict";function o(){this._root=(0,c.render)(function e(t,n){if(3===t.nodeType)return t.nodeValue;if(1!==t.nodeType)return null;var o=[],r={},i=0,u=t.attributes,l=t.childNodes;for(i=u.length;i--;)r[u[i].name]=u[i].value;for(i=l.length;i--;)o[i]=e(l[i]);return(0,c.h)(n||t.nodeName.toLowerCase(),r,o)}(this,this._vdomComponent),this,this._root)}function r(){(0,c.render)((0,c.h)(u),this,this._root)}Object.defineProperty(t,"__esModule",{value:!0});var i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};t.default=function(e,t,n){var c=function(t){function c(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c);var t=Reflect.construct(HTMLElement,[],c);return t._vdomComponent=e,t}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+(void 0===t?"undefined":i(t)));e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(c,HTMLElement),l(c,[{key:"connectedCallback",value:function(){o.apply(this)}},{key:"attributeChangedCallback",value:function(){o.apply(this)}},{key:"detachedCallback",value:function(){r.apply(this)}}],[{key:"observedAttributes",get:function(){return n}}]),c}();return window.customElements.define(t||e.displayName||e.name,c)};var c=n(1),u=function(){return null},l=function(){function e(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}return function(t,n,o){return n&&e(t.prototype,n),o&&e(t,o),t}}()},function(e,t){e.exports=o}]))},,function(e,t){function n(){return e.exports=n=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e},n.apply(this,arguments)}e.exports=n},function(e,t,n){var o=n(8),r=n(22);"string"==typeof(r=r.__esModule?r.default:r)&&(r=[[e.i,r,""]]);var i={insert:"head",singleton:!1},c=(o(e.i,r,i),r.locals?r.locals:{});e.exports=c},function(e,t,n){"use strict";n.r(t);var o=n(5),r=n.n(o),i=n(0),c="/Users/igors/Development/pc-comonents/src/Sidebar/LogoIcon.tsx";t.default=function(e){return Object(i.h)("svg",r()({width:"140px",height:"44px",viewBox:"0 0 140 44"},e,{__source:{fileName:c,lineNumber:4}}),Object(i.h)("g",{transform:"translate(-24 -33)",stroke:"none",strokeWidth:1,fill:"none",fillRule:"evenodd",__source:{fileName:c,lineNumber:5}},Object(i.h)("path",{d:"M0 0H220V108H0z",__source:{fileName:c,lineNumber:12}}),Object(i.h)("g",{fill:"#FFF",fillRule:"nonzero",__source:{fileName:c,lineNumber:13}},Object(i.h)("path",{d:"M2.8 39v-6.12h4.98c.64 0 1.22-.09 1.74-.27.52-.18.967-.447 1.34-.8.373-.353.66-.783.86-1.29.2-.507.3-1.08.3-1.72 0-.64-.1-1.213-.3-1.72a3.537 3.537 0 00-.86-1.29 3.665 3.665 0 00-1.34-.8c-.52-.18-1.1-.27-1.74-.27H1.44V39H2.8zm4.68-7.28H2.8v-5.84h4.68c.947 0 1.713.24 2.3.72.587.48.88 1.213.88 2.2 0 .987-.293 1.72-.88 2.2-.587.48-1.353.72-2.3.72zM15.06 39v-5.5c0-.533.093-1.033.28-1.5.187-.467.45-.867.79-1.2a3.51 3.51 0 011.21-.77c.467-.18.987-.257 1.56-.23v-1.26c-.933-.04-1.737.167-2.41.62-.673.453-1.17 1.1-1.49 1.94h-.04v-2.42H13.8V39h1.26zm9.04.3c.787 0 1.483-.147 2.09-.44a4.553 4.553 0 001.53-1.18c.413-.493.727-1.07.94-1.73a6.82 6.82 0 00.32-2.11c0-.733-.107-1.433-.32-2.1a5.092 5.092 0 00-.94-1.74 4.553 4.553 0 00-1.53-1.18c-.607-.293-1.303-.44-2.09-.44-.787 0-1.483.147-2.09.44A4.553 4.553 0 0020.48 30a5.092 5.092 0 00-.94 1.74 6.848 6.848 0 00-.32 2.1c0 .747.107 1.45.32 2.11.213.66.527 1.237.94 1.73.413.493.923.887 1.53 1.18.607.293 1.303.44 2.09.44zm0-1.06c-.6 0-1.127-.127-1.58-.38a3.469 3.469 0 01-1.13-1 4.537 4.537 0 01-.68-1.41 5.731 5.731 0 010-3.22c.153-.527.38-.997.68-1.41.3-.413.677-.747 1.13-1 .453-.253.98-.38 1.58-.38.6 0 1.127.127 1.58.38.453.253.83.587 1.13 1 .3.413.527.883.68 1.41a5.731 5.731 0 010 3.22c-.153.527-.38.997-.68 1.41-.3.413-.677.747-1.13 1-.453.253-.98.38-1.58.38zm10.96 1.06a4.36 4.36 0 002.2-.62c.333-.2.63-.44.89-.72.26-.28.457-.587.59-.92h.04V39h1.16V24.72h-1.26v5.92h-.04a2.983 2.983 0 00-.57-.98 3.428 3.428 0 00-.85-.7 4.275 4.275 0 00-2.16-.58c-.787 0-1.47.147-2.05.44-.58.293-1.063.69-1.45 1.19s-.673 1.08-.86 1.74a7.645 7.645 0 00-.28 2.09c0 .733.093 1.43.28 2.09.187.66.473 1.24.86 1.74s.87.897 1.45 1.19c.58.293 1.263.44 2.05.44zm0-1.06c-.6 0-1.113-.13-1.54-.39a3.304 3.304 0 01-1.05-1.01 4.396 4.396 0 01-.6-1.41 6.777 6.777 0 010-3.18c.127-.527.327-.997.6-1.41.273-.413.623-.75 1.05-1.01.427-.26.94-.39 1.54-.39.667 0 1.23.13 1.69.39.46.26.833.597 1.12 1.01.287.413.493.883.62 1.41a6.777 6.777 0 010 3.18 4.152 4.152 0 01-.62 1.41 3.34 3.34 0 01-1.12 1.01c-.46.26-1.023.39-1.69.39zm10.88 1.06c.773 0 1.477-.187 2.11-.56a3.636 3.636 0 001.45-1.6h.04V39h1.16V28.68h-1.26v5.42c0 .52-.06 1.03-.18 1.53s-.307.943-.56 1.33a2.939 2.939 0 01-.97.93c-.393.233-.857.35-1.39.35-1 0-1.703-.24-2.11-.72-.407-.48-.623-1.187-.65-2.12v-6.72h-1.26v6.7c0 .6.067 1.143.2 1.63.133.487.343.9.63 1.24.287.34.66.6 1.12.78.46.18 1.017.27 1.67.27zm11.5 0c1.16 0 2.117-.353 2.87-1.06.753-.707 1.217-1.687 1.39-2.94h-1.26c-.04.427-.147.82-.32 1.18a3.26 3.26 0 01-.66.93c-.267.26-.573.463-.92.61-.347.147-.713.22-1.1.22-.6 0-1.127-.127-1.58-.38a3.469 3.469 0 01-1.13-1 4.537 4.537 0 01-.68-1.41 5.731 5.731 0 010-3.22c.153-.527.38-.997.68-1.41.3-.413.677-.747 1.13-1 .453-.253.98-.38 1.58-.38.827 0 1.477.22 1.95.66.473.44.797 1.047.97 1.82h1.26c-.147-1.187-.603-2.073-1.37-2.66-.767-.587-1.703-.88-2.81-.88-.787 0-1.483.147-2.09.44A4.553 4.553 0 0053.82 30a5.092 5.092 0 00-.94 1.74 6.848 6.848 0 00-.32 2.1c0 .747.107 1.45.32 2.11.213.66.527 1.237.94 1.73.413.493.923.887 1.53 1.18.607.293 1.303.44 2.09.44zm9-.18c.187 0 .373-.007.56-.02l.28-.015.28-.005V38c-.36.04-.72.06-1.08.06-.453-.027-.737-.157-.85-.39-.113-.233-.17-.557-.17-.97v-6.96h2.1v-1.06h-2.1v-3.1H64.2v3.1h-1.8v1.06h1.8v7.293c.017.755.177 1.284.48 1.587.333.333.92.5 1.76.5zm14.8.18c.84 0 1.603-.133 2.29-.4a5.194 5.194 0 001.79-1.15c.507-.5.92-1.103 1.24-1.81.32-.707.527-1.5.62-2.38h-1.36a6.044 6.044 0 01-.46 1.79 5.032 5.032 0 01-.94 1.45c-.387.413-.85.74-1.39.98-.54.24-1.137.36-1.79.36-.947 0-1.76-.18-2.44-.54a4.834 4.834 0 01-1.67-1.43 6.161 6.161 0 01-.96-2.01 8.618 8.618 0 010-4.59 6.148 6.148 0 01.96-2.02c.433-.593.99-1.07 1.67-1.43.68-.36 1.493-.54 2.44-.54.52 0 1.017.077 1.49.23.473.153.907.377 1.3.67.393.293.727.657 1 1.09.273.433.47.923.59 1.47h1.36c-.093-.747-.317-1.407-.67-1.98a5.186 5.186 0 00-1.32-1.45 5.762 5.762 0 00-1.76-.89c-.647-.2-1.31-.3-1.99-.3-1.12 0-2.103.203-2.95.61a6.07 6.07 0 00-2.11 1.64c-.56.687-.98 1.48-1.26 2.38-.28.9-.42 1.837-.42 2.81 0 .973.14 1.91.42 2.81.28.9.7 1.693 1.26 2.38a6.07 6.07 0 002.11 1.64c.847.407 1.83.61 2.95.61zm10.68 0c.493 0 .927-.047 1.3-.14.373-.093.703-.23.99-.41.287-.18.547-.4.78-.66a8.42 8.42 0 00.69-.89h.04c0 .267.017.51.05.73.033.22.103.41.21.57.107.16.257.283.45.37.193.087.45.13.77.13a3.797 3.797 0 00.82-.08v-1.06a1.07 1.07 0 01-.4.08c-.493 0-.74-.253-.74-.76V31.7c0-.693-.113-1.257-.34-1.69a2.669 2.669 0 00-.88-1.01 3.286 3.286 0 00-1.22-.49 7.228 7.228 0 00-1.36-.13c-1.187 0-2.163.273-2.93.82-.767.547-1.183 1.427-1.25 2.64h1.26c.027-.84.297-1.45.81-1.83.513-.38 1.163-.57 1.95-.57.373 0 .723.03 1.05.09.327.06.613.17.86.33s.44.377.58.65c.14.273.21.623.21 1.05 0 .28-.037.507-.11.68a.902.902 0 01-.31.4 1.434 1.434 0 01-.51.21 5.998 5.998 0 01-.69.11c-.68.08-1.35.163-2.01.25a7.244 7.244 0 00-1.78.45 3.02 3.02 0 00-1.27.93c-.32.407-.48.97-.48 1.69 0 .52.09.97.27 1.35.18.38.427.693.74.94s.68.43 1.1.55c.42.12.87.18 1.35.18zm.1-1.06c-.293 0-.58-.047-.86-.14a2.226 2.226 0 01-.74-.41 2.062 2.062 0 01-.51-.64 1.835 1.835 0 01-.19-.85c0-.507.15-.897.45-1.17.3-.273.683-.483 1.15-.63a9.049 9.049 0 011.55-.33 37.48 37.48 0 001.65-.25c.173-.027.373-.073.6-.14.227-.067.38-.173.46-.32h.04V35c0 .507-.097.96-.29 1.36-.193.4-.453.74-.78 1.02s-.71.493-1.15.64c-.44.147-.9.22-1.38.22zm10.36.88c.187 0 .373-.007.56-.02l.28-.015.28-.005V38c-.36.04-.72.06-1.08.06-.453-.027-.737-.157-.85-.39-.113-.233-.17-.557-.17-.97v-6.96h2.1v-1.06h-2.1v-3.1h-1.26v3.1h-1.8v1.06h1.8v7.293c.017.755.177 1.284.48 1.587.333.333.92.5 1.76.5zm5.84.18c.493 0 .927-.047 1.3-.14.373-.093.703-.23.99-.41.287-.18.547-.4.78-.66a8.42 8.42 0 00.69-.89h.04c0 .267.017.51.05.73.033.22.103.41.21.57.107.16.257.283.45.37.193.087.45.13.77.13a3.797 3.797 0 00.82-.08v-1.06a1.07 1.07 0 01-.4.08c-.493 0-.74-.253-.74-.76V31.7c0-.693-.113-1.257-.34-1.69a2.669 2.669 0 00-.88-1.01 3.286 3.286 0 00-1.22-.49 7.228 7.228 0 00-1.36-.13c-1.187 0-2.163.273-2.93.82-.767.547-1.183 1.427-1.25 2.64h1.26c.027-.84.297-1.45.81-1.83.513-.38 1.163-.57 1.95-.57.373 0 .723.03 1.05.09.327.06.613.17.86.33s.44.377.58.65c.14.273.21.623.21 1.05 0 .28-.037.507-.11.68a.902.902 0 01-.31.4 1.434 1.434 0 01-.51.21 5.998 5.998 0 01-.69.11c-.68.08-1.35.163-2.01.25a7.244 7.244 0 00-1.78.45 3.02 3.02 0 00-1.27.93c-.32.407-.48.97-.48 1.69 0 .52.09.97.27 1.35.18.38.427.693.74.94s.68.43 1.1.55c.42.12.87.18 1.35.18zm.1-1.06c-.293 0-.58-.047-.86-.14a2.226 2.226 0 01-.74-.41 2.062 2.062 0 01-.51-.64 1.835 1.835 0 01-.19-.85c0-.507.15-.897.45-1.17.3-.273.683-.483 1.15-.63a9.049 9.049 0 011.55-.33 37.48 37.48 0 001.65-.25c.173-.027.373-.073.6-.14.227-.067.38-.173.46-.32h.04V35c0 .507-.097.96-.29 1.36-.193.4-.453.74-.78 1.02s-.71.493-1.15.64c-.44.147-.9.22-1.38.22zm8.66.76V24.72h-1.26V39h1.26zm6.78.3c.787 0 1.483-.147 2.09-.44a4.553 4.553 0 001.53-1.18c.413-.493.727-1.07.94-1.73a6.82 6.82 0 00.32-2.11c0-.733-.107-1.433-.32-2.1a5.092 5.092 0 00-.94-1.74 4.553 4.553 0 00-1.53-1.18c-.607-.293-1.303-.44-2.09-.44-.787 0-1.483.147-2.09.44a4.553 4.553 0 00-1.53 1.18 5.092 5.092 0 00-.94 1.74 6.848 6.848 0 00-.32 2.1c0 .747.107 1.45.32 2.11.213.66.527 1.237.94 1.73.413.493.923.887 1.53 1.18.607.293 1.303.44 2.09.44zm0-1.06c-.6 0-1.127-.127-1.58-.38a3.469 3.469 0 01-1.13-1 4.537 4.537 0 01-.68-1.41 5.731 5.731 0 010-3.22c.153-.527.38-.997.68-1.41.3-.413.677-.747 1.13-1 .453-.253.98-.38 1.58-.38.6 0 1.127.127 1.58.38.453.253.83.587 1.13 1 .3.413.527.883.68 1.41a5.731 5.731 0 010 3.22c-.153.527-.38.997-.68 1.41-.3.413-.677.747-1.13 1-.453.253-.98.38-1.58.38zm10.9 4.88c.84 0 1.55-.113 2.13-.34.58-.227 1.05-.553 1.41-.98.36-.427.623-.947.79-1.56.167-.613.25-1.307.25-2.08v-9.48h-1.26v1.78h-.04c-.253-.573-.673-1.063-1.26-1.47-.587-.407-1.26-.61-2.02-.61-.747 0-1.41.137-1.99.41a4.195 4.195 0 00-1.46 1.12 4.988 4.988 0 00-.9 1.66 6.439 6.439 0 00-.31 2.01c0 .733.087 1.423.26 2.07.173.647.45 1.21.83 1.69.38.48.863.857 1.45 1.13.587.273 1.293.41 2.12.41.747 0 1.407-.193 1.98-.58a3.658 3.658 0 001.3-1.54h.04v1.4c0 1.267-.26 2.233-.78 2.9-.52.667-1.367 1-2.54 1-.347 0-.687-.037-1.02-.11a3.112 3.112 0 01-.91-.35 2.336 2.336 0 01-.7-.63c-.193-.26-.323-.583-.39-.97h-1.26c.04.547.19 1.017.45 1.41s.587.717.98.97.837.44 1.33.56c.493.12 1 .18 1.52.18zm0-5.3c-.587 0-1.093-.117-1.52-.35a3.212 3.212 0 01-1.06-.92 3.9 3.9 0 01-.62-1.31 5.8 5.8 0 01-.2-1.52c0-.533.063-1.057.19-1.57.127-.513.33-.97.61-1.37.28-.4.633-.723 1.06-.97.427-.247.94-.37 1.54-.37.6 0 1.11.127 1.53.38.42.253.763.587 1.03 1 .267.413.46.873.58 1.38.12.507.18 1.013.18 1.52 0 .52-.07 1.027-.21 1.52-.14.493-.35.93-.63 1.31a3.28 3.28 0 01-1.04.92c-.413.233-.893.35-1.44.35zM21.698.652c-.74.388-1.034 1.034-1.034 2.845.27-.245.584-.436.926-.564.337-.129.656-.303.946-.517.626-.456.72-1.035.72-2.038a4.045 4.045 0 00-1.558.274zM17.317 1.07a2.824 2.824 0 00-.776 1.377L14.55 10.19l-1.655-6.321a5.4 5.4 0 00-.91-2.069c-.585-.714-1.78-.76-1.904-.76-.124 0-1.319.046-1.903.76a5.4 5.4 0 00-.91 2.069l-1.656 6.32-2.007-7.758c-.122-.523-.391-1-.776-1.376A3.44 3.44 0 00.388.378l3.817 14.43a4.691 4.691 0 001.888-.232c.828-.424 1.22-.745 1.723-2.71.444-1.749 1.696-6.89 1.81-7.242.057-.18.13-.615.45-.615s.393.434.45.615c.114.367 1.365 5.509 1.81 7.242.517 1.965.895 2.286 1.723 2.71.606.206 1.249.285 1.888.233L19.764.378a3.44 3.44 0 00-2.447.693zM23.281 2.752c-.207.28-.474.509-.781.672-.352.197-.688.326-1.034.517a1.091 1.091 0 00-.766 1.102v9.802a3.284 3.284 0 001.593-.202c.812-.414.998-.812 1.004-2.586V3.274l-.016-.522zM32.793 7.645l4.841-7.2s-2.068-.347-3.056.574a11.54 11.54 0 00-1.371 1.65l-1.78 2.586a.398.398 0 01-.76 0l-1.78-2.586a11.54 11.54 0 00-1.37-1.65C26.483.099 24.46.445 24.46.445l4.842 7.2-4.836 7.2s2.125.269 3.14-.652a9.6 9.6 0 001.272-1.552l1.779-2.586a.398.398 0 01.76 0l1.78 2.586c.387.557.825 1.077 1.308 1.552 1.035.92 3.104.652 3.104.652l-4.816-7.2z",transform:"translate(24 33)",__source:{fileName:c,lineNumber:14}}))))}},function(e,t,n){"use strict";var o,r=function(){return void 0===o&&(o=Boolean(window&&document&&document.all&&!window.atob)),o},i=function(){var e={};return function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}e[t]=n}return e[t]}}(),c={};function u(e,t,n){for(var o=0;o<t.length;o++){var r={css:t[o][1],media:t[o][2],sourceMap:t[o][3]};c[e][o]?c[e][o](r):c[e].push(h(r,n))}}function l(e){var t=document.createElement("style"),o=e.attributes||{};if(void 0===o.nonce){var r=n.nc;r&&(o.nonce=r)}if(Object.keys(o).forEach((function(e){t.setAttribute(e,o[e])})),"function"==typeof e.insert)e.insert(t);else{var c=i(e.insert||"head");if(!c)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");c.appendChild(t)}return t}var a,s=(a=[],function(e,t){return a[e]=t,a.filter(Boolean).join("\n")});function f(e,t,n,o){var r=n?"":o.css;if(e.styleSheet)e.styleSheet.cssText=s(t,r);else{var i=document.createTextNode(r),c=e.childNodes;c[t]&&e.removeChild(c[t]),c.length?e.insertBefore(i,c[t]):e.appendChild(i)}}function _(e,t,n){var o=n.css,r=n.media,i=n.sourceMap;if(r?e.setAttribute("media",r):e.removeAttribute("media"),i&&btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleSheet)e.styleSheet.cssText=o;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(o))}}var p=null,d=0;function h(e,t){var n,o,r;if(t.singleton){var i=d++;n=p||(p=l(t)),o=f.bind(null,n,i,!1),r=f.bind(null,n,i,!0)}else n=l(t),o=_.bind(null,n,t),r=function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)};return o(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;o(e=t)}else r()}}e.exports=function(e,t,n){return(n=n||{}).singleton||"boolean"==typeof n.singleton||(n.singleton=r()),e=n.base?e+n.base:e,t=t||[],c[e]||(c[e]=[]),u(e,t,n),function(t){if(t=t||[],"[object Array]"===Object.prototype.toString.call(t)){c[e]||(c[e]=[]),u(e,t,n);for(var o=t.length;o<c[e].length;o++)c[e][o]();c[e].length=t.length,0===c[e].length&&delete c[e]}}}},function(e,t,n){"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n=function(e,t){var n=e[1]||"",o=e[3];if(!o)return n;if(t&&"function"==typeof btoa){var r=(c=o,u=btoa(unescape(encodeURIComponent(JSON.stringify(c)))),l="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(u),"/*# ".concat(l," */")),i=o.sources.map((function(e){return"/*# sourceURL=".concat(o.sourceRoot||"").concat(e," */")}));return[n].concat(i).concat([r]).join("\n")}var c,u,l;return[n].join("\n")}(t,e);return t[2]?"@media ".concat(t[2]," {").concat(n,"}"):n})).join("")},t.i=function(e,n,o){"string"==typeof e&&(e=[[null,e,""]]);var r={};if(o)for(var i=0;i<this.length;i++){var c=this[i][0];null!=c&&(r[c]=!0)}for(var u=0;u<e.length;u++){var l=[].concat(e[u]);o&&r[l[0]]||(n&&(l[2]?l[2]="".concat(n," and ").concat(l[2]):l[2]=n),t.push(l))}},t}},,,,,,,,,,,,function(e,t,n){"use strict";n.r(t);var o=n(0),r=n(1),i=n(3),c=n.n(i),u=n(6),l=n.n(u),a=n(7),s="/Users/igors/Development/pc-comonents/src/Sidebar/index.tsx",f=function(){return Object(o.h)("div",{className:l.a.logo,__source:{fileName:s,lineNumber:25}},Object(o.h)(a.default,{__source:{fileName:s,lineNumber:25}}))},_=function(e){var t=e.section,n=e.isActive,r=e.clickHandler;return Object(o.h)("div",{className:l.a.section,__source:{fileName:s,lineNumber:31}},t.label&&Object(o.h)("h5",{__source:{fileName:s,lineNumber:32}},t.label),Object(o.h)("ul",{__source:{fileName:s,lineNumber:33}},t.items.map((function(e,t){return Object(o.h)("li",{key:e.label,__source:{fileName:s,lineNumber:35}},Object(o.h)("button",{tabIndex:-t,className:n&&n.label===e.label?l.a.active:void 0,type:"button",onClick:function(){return r(e)},onKeyPress:function(){return r(e)},__source:{fileName:s,lineNumber:38}},e.label))}))))},p=function(e){var t=e.data,n=e.activemenuitem,i=Object(r.c)([]),c=i[0],u=i[1],a=Object(r.c)(null),p=a[0],d=a[1],h=Object(r.b)(),m=new CustomEvent("menuItemClicked",{detail:p,bubbles:!0}),v=function(e){return d(e)};return Object(r.a)((function(){if(t){var e=JSON.parse(t);u(e),n&&e.map((function(e){var t=e.items.filter((function(e){return e.label===n}));t.length&&d.apply(void 0,t)}))}}),[t,n]),Object(r.a)((function(){h.current&&h.current.dispatchEvent(m)}),[p]),c?Object(o.h)("div",{ref:h,className:l.a.sidebar,__source:{fileName:s,lineNumber:89}},Object(o.h)(f,{__source:{fileName:s,lineNumber:90}}),c.map((function(e){return Object(o.h)(_,{key:e.label,section:e,isActive:p,clickHandler:v,__source:{fileName:s,lineNumber:92}})}))):null};c()(p,"x-sidebar",["data","activemenuitem"]),t.default=p},function(e,t,n){(t=n(9)(!1)).push([e.i,"@import url(https://static.parastorage.com/services/third-party/fonts/Helvetica/fontFace.css);"]),t.push([e.i,'@keyframes fadeInAndScale{from{opacity:0;transform:scale(0.98)}to{opacity:1;transform:scale(1)}}*,html{-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;box-sizing:border-box}.sidebar{height:100vh;width:220px;background:#23263e;color:#fff;font-family:"HelveticaNeueW01-65Medi","HelveticaNeueW02-65Medi","HelveticaNeueW10-65Medi","Helvetica Neue","Helvetica","Arial","メイリオ, meiryo","ヒラギノ角ゴ pro w3","hiragino kaku gothic pro","sans-serif";font-family:var(--wsr-font-family, "HelveticaNeueW01-65Medi","HelveticaNeueW02-65Medi","HelveticaNeueW10-65Medi","Helvetica Neue","Helvetica","Arial","メイリオ, meiryo","ヒラギノ角ゴ pro w3","hiragino kaku gothic pro","sans-serif")}.sidebar .logo{padding:0 24px;height:108px;display:flex;align-items:center}.section:last-child:after{display:none}.section:after{content:"";margin:0 24px;height:36px;position:relative;display:block;box-shadow:inset 0 -17px 0 0 #23263e,inset 0 -18px 0 0 #434567}.section h5{font-size:12px;font-weight:500;color:#7A92A5;height:36px;display:flex;align-items:center;margin:0;padding:0 24px}.section ul{list-style:none;padding:0;margin:0}.section ul li{display:flex}.section ul li button{font-family:"HelveticaNeueW01-65Medi","HelveticaNeueW02-65Medi","HelveticaNeueW10-65Medi","Helvetica Neue","Helvetica","Arial","メイリオ, meiryo","ヒラギノ角ゴ pro w3","hiragino kaku gothic pro","sans-serif";font-family:var(--wsr-font-family, "HelveticaNeueW01-65Medi","HelveticaNeueW02-65Medi","HelveticaNeueW10-65Medi","Helvetica Neue","Helvetica","Arial","メイリオ, meiryo","ヒラギノ角ゴ pro w3","hiragino kaku gothic pro","sans-serif");height:36px;padding:0 24px;width:100%;font-size:14px;background:none;text-align:left;color:#fff;border:none}.section ul li button:hover{background:#2e3249;outline:none;cursor:pointer}.section ul li button:focus{background:#2e3249;outline:none}.section ul li button.active{outline:none;color:#3899EC;background:#393f59}\n',""]),t.locals={D10:"#162D3D",D20:"#32536A",D30:"#577083",D40:"#7A92A5",D50:"#B6C1CD",D55:"#CBD3DC",D60:"#DFE5EB",D70:"#F0F4F7",D80:"#fff",B00:"#2B81CB",B05:"#308DDD",B10:"#3899EC",B20:"#4EB7F5",B25:"#A1D7FB",B27:"#B3E0FB",B30:"#C1E4FE",B40:"#DAEFFE",B50:"#EAF7FF",B60:"#F4FAFE",F00:"#AADBFC",P00:"#8E21B1",P10:"#AA4DC8",P20:"#CD68ED",P30:"#E5C9EE",P40:"#EEDBF4",P50:"#FAEEFF",P60:"#FAF7FC",O00:"#EA5F0E",O10:"#FB7D33",O20:"#FF9A48",R00:"#D6453D",R05:"#D8504C",R10:"#EE5951",R20:"#f66",R30:"#FFD7D7",R40:"#FFE1E1",R50:"#FFEBEB",R60:"#FFF5F5",G00:"#44823F",G05:"#61AD5A",G10:"#60BC57",G20:"#80C979",G30:"#C9EEBC",G40:"#DEF4D4",G50:"#EDF9E5",G60:"#F2FBEF",Y00:"#C68801",Y05:"#EDA200",Y10:"#FDB10C",Y20:"#FAC249",Y30:"#FEF0BA",Y40:"#FEF4CD",Y50:"#FDF7DF",Y60:"#FFFCF0",A1:"#3370FB",A2:"#7852D2",A3:"#17B0E2",A4:"#C53E99",A5:"#FDB10C",A6:"#3D9FA1",B1:"#EF73C0",B2:"#FF8D41",B3:"#ED6779",B4:"#125b8f",C1:"#4abd81",C2:"#2682CD",C3:"#68A4D5",C4:"#FF8E8C"},e.exports=t}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,